* Fundamentals of Web apps
** HTTP GET
The *Response* headers on top tell us for e.g. the size of the response in bytes
and the exact time of the response. An important header Content-Type tells us that
the response is a text file in utf-8 format and the contents of which have been formatted
with HTML. This way the browser knows the response to be a regular HTML page and
render it to the browser as is.

#+BEGIN_SRC mermaid :file test.png
  %%{init: {'theme': 'base', 'themeVariables': { 'fontSize': '13px', 'fontFamily': 'Inter'}}}%%
  sequenceDiagram
      participant browser
      participant server
      
      browser->>server:GET https://studies.cs.helsinki.fi/exampleapp/notes
      activate server
      server-->>browser: HTML document
      deactivate server
      
      browser->>server:GET https://studies.cs.helsinki.fi/exampleapp/main.css
      activate server
      server-->>browser: the css file
      deactivate server
      
      browser->>server:GET https://studies.cs.helsinki.fi/exampleapp/main.js
      activate server
      server-->>browser: the Javascript file
      deactivate server
      
      Note right of browser: The browser starts executing code that fetches the JSON from the server
      
      browser->>server:GET https://studies.cs.helsinki.fl/exampleapp/data.json
      activate server
      server-->>browser: [{"content": "HTML is easy", "date": "2024-12-01"}, ... ]
      deactivate server
      
      Note right of browser: The browser executes the callback function that renders the notes
#+END_SRC

#+RESULTS:
[[file:test.png]]

** Forms and HTTP POST
**HTTP POST** makes request to the server for example for the above notes application
we can request a =new_note=. The server responds with a HTTP status code 302. This is
a URL redirect, with which the sever asks the browser to perform a new HTTP GET request
to the address in the header's /Location/ - the /address/ notes.

So, the browser relaods the Notes pages. The reaload causes three more HTTP requests: fetching
the style sheet (main.css), the Javascript code (main.js), and the raw data of the notes (data.json).

** AJAX
- Stands for Asynchronous JavaScript and XML.

** Single Page App (SPA)
- In a SPA upon sending a POST request, we only send a single request to the server (POST).
  The Post request contains the content of the notes and the timestamp of the note.

- The =content-type= is in JSON format.
  